# https://firebase.google.com/docs/extensions/reference/extension-yaml

name: trigger-github-issues-from-crashlytics
version: 1.0.0
specVersion: v1beta

displayName: Trigger GitHub issues from Crashlytics
description: >-
  Automatically creates GitHub Issues triggered by Crashlytics alerts.
icon: icon.png
tags: [utilities]

license: Apache-2.0
sourceUrl: https://github.com/htsuruo/firebase-extensions

billingRequired: true

author:
  authorName: Hideki Tsuruoka
  email: tsuru.dev@gmail.com
  url: https://github.com/htsuruo

apis:
  - apiName: eventarc.googleapis.com
    reason: Powers all events and triggers
  - apiName: run.googleapis.com
    reason: Powers 2nd-gen functions

# In a `roles` field, list any IAM access roles required for your extension to operate.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#roles-field
roles:
  - role: firebasecrashlytics.viewer
    reason: Allows the extension to read Crashlytics reports.
  - role: eventarc.eventReceiver
    reason: Allows the extension to trigger on alerts.

externalServices:
  - name: GitHub API
    pricingUri: https://github.com/pricing

# In the `resources` field, list each of your extension's functions, including the trigger for each function.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#resources-field
resources:
  - name: createFatalIssue
    type: firebaseextensions.v1beta.v2function
    description: >-
      New crashlytics fatal issue triggered function that creates GitHub Issues.
    properties:
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      location: ${LOCATION}
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: crashlytics.newFatalIssue

  - name: createNonFatalIssue
    type: firebaseextensions.v1beta.v2function
    description: >-
      New crashlytics non-fatal issue triggered function that creates GitHub Issues.
    properties:
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      location: ${LOCATION}
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: crashlytics.newNonfatalIssue

  - name: createAnrIssue
    type: firebaseextensions.v1beta.v2function
    description: >-
      New ANR issue triggered function that creates GitHub Issues.
    properties:
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
      location: ${LOCATION}
      eventTrigger:
        eventType: google.firebase.firebasealerts.alerts.v1.published
        triggerRegion: global
        eventFilters:
          - attribute: alerttype
            value: crashlytics.newAnrIssue

# In the `params` field, set up your extension's user-configured parameters.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#params-field
params:
  - param: GITHUB_ACCESS_TOKEN
    label: GitHub access token for your repository
    description: >-
      Use PAT(Personal Access Token) or GitHub Apps Token
    type: secret
    required: true
    example: github_pat_xxx

  - param: GITHUB_OWNER
    label: The owner or organization name for your repository
    required: true
    type: string

  - param: GITHUB_REPO
    label: The name of your repository for creating issues
    required: true
    type: string

  - param: GITHUB_LABELS
    label: Labels to associate with the issue
    description: >-
      The param requires camma(,) separated format
      Only users with push access can set labels for new issues. Labels are silently dropped otherwise.
    type: string
    example: bug,crashlytics
    required: false

  - param: ALERTS
    label: The selection of alert type you want to trigger
    type: multiSelect
    required: true
    options:
      - label: New Fatal Issue
        value: newFatalIssue
      - label: New Non-Fatal Issue
        value: newNonfatalIssue
      - label: New ANR Issue
        value: newAnrIssue

  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      For help selecting a location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    required: true
    immutable: true
